# config/packages/security.yaml
security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: id

        admin_users:
            entity:
                class: App\Entity\User
                property: login
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin:
            pattern: ^/poker2/admin
            lazy: true
            form_login:
                provider: admin_users
                login_path: admin_login
                check_path: admin_login
                default_target_path: admin
                target_path_parameter: admin
            logout:
                path: admin_logout
                target: admin_logout
            entry_point: 'form_login'

        main:
            pattern: ^/poker2
            lazy: true
            stateless: true
            provider: app_user_provider
            custom_authenticators:
                - App\Security\PlayerAuthenticator

    access_control:
        - { path: ^/poker2/admin/login, roles: PUBLIC_ACCESS }
        - { path: ^/poker2/admin, roles: ROLE_ADMIN }
when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
